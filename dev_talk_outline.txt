Flutter dev talk outline

Branches
1. Default counter app.
    Show off Widgets
    Basic app entry point
    Running on different devices.
    Auto-update on save
    etc
2. Multi page static app. Naive implementation
    Shows basic navigation.
    Bottom Nav Bar. Doesn't look good on web.
3. Static app. Improved implementation
    Code reuse. Refactor as Widgets (replace Type boxes)
        Improves indentation troubles.
        Performance improvements (Pokemon type column, build function).
    Scrolling.
        SingleChildScrollView vs ListView
4. Platform responsive design
    Show LayoutBuilder constraints (constraints.maxWidth > 900)
    Refactor for BoxConstraints extension isMobile
    Nullable appBar actions method, TextButtons
    Title visibility
5. State management intro
    Pok√©mon model & list in repository
    Species widget
    Randomise with business logic in UI.
        Convert to stateful. _pokemon in the state.
6. BLoC introduction
    Dependencies from pub.dev, flutter_bloc, bloc, meta
    Basic state + event.
    Randomising logic in BLoC.
7. Network Models, no live coding
    Import json_serializable, json_annotation, and build_runner
    Convert the pokemon model class and pokemon_type enum
    flutter pub run build_runner build --delete-conflicting-outputs
    explain the PokemonType tree.
8. Network Dio implementation
    api.dart with Dio singleton
    pokemon_service singleton with GET Pokemon
    called from repository
9. Network Loading state
    New LoadingPokemonState concrete class
    Show CircularProgressIndicator in SpeciesPage
10. Network image
    Add fields to start consuming Sprite image URL from API
    Show image with Image.network()
    





